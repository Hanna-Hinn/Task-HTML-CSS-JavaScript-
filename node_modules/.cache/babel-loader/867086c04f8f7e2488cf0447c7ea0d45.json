{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\EventPage\\\\src\\\\store\\\\globalContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalContext = /*#__PURE__*/React.createContext({\n  mode: \"list\",\n  events: [],\n  isLoading: false,\n  toggleMode: () => {},\n  addData: () => {}\n});\nexport const GlobalContextProvider = props => {\n  _s();\n\n  const [mode, setMode] = useState(\"list\");\n  const [events, setEvents] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const toggleModeHandler = mode => {\n    setMode(mode);\n  };\n\n  useEffect(() => {\n    const eventHandler = () => {\n      const arr = [];\n      fetch(\"https://event-task-f2694-default-rtdb.firebaseio.com/events.json\").then(response => {\n        setIsLoading(false);\n        setIsLoading(true);\n        return response.json();\n      }).then(data => {\n        Object.keys(data).forEach(key => {\n          const obj = {\n            id: key,\n            name: data[key].name,\n            description: data[key].description,\n            date: data[key].date\n          };\n          arr.push(obj);\n        });\n        setIsLoading(false);\n        setEvents(arr);\n      });\n    };\n  }, [setEvents]);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      mode: mode,\n      events: events,\n      isLoading: isLoading,\n      toggleMode: toggleMode\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalContextProvider, \"PqfInwujqrfpIvtOc7HF1YfOfnw=\");\n\n_c = GlobalContextProvider;\nexport default GlobalContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalContextProvider\");","map":{"version":3,"names":["React","useState","useEffect","GlobalContext","createContext","mode","events","isLoading","toggleMode","addData","GlobalContextProvider","props","setMode","setEvents","setIsLoading","toggleModeHandler","eventHandler","arr","fetch","then","response","json","data","Object","keys","forEach","key","obj","id","name","description","date","push","children"],"sources":["C:/Users/PC/Desktop/EventPage/src/store/globalContext.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst GlobalContext = React.createContext({\r\n  mode: \"list\",\r\n  events: [],\r\n  isLoading: false,\r\n  toggleMode: () => {},\r\n  addData: () => {},\r\n});\r\n\r\nexport const GlobalContextProvider = (props) => {\r\n  const [mode, setMode] = useState(\"list\");\r\n  const [events, setEvents] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const toggleModeHandler = (mode) => {\r\n    setMode(mode);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const eventHandler = () => {\r\n      const arr = [];\r\n      fetch(\"https://event-task-f2694-default-rtdb.firebaseio.com/events.json\")\r\n        .then((response) => {\r\n          setIsLoading(false);\r\n          setIsLoading(true);\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          Object.keys(data).forEach((key) => {\r\n            const obj = {\r\n              id: key,\r\n              name: data[key].name,\r\n              description: data[key].description,\r\n              date: data[key].date,\r\n            };\r\n            arr.push(obj);\r\n          });\r\n          setIsLoading(false);\r\n          setEvents(arr);\r\n        });\r\n    };\r\n  }, [setEvents]);\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        mode: mode,\r\n        events: events,\r\n        isLoading: isLoading,\r\n        toggleMode: toggleMode,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GlobalContext;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,aAAa,gBAAGH,KAAK,CAACI,aAAN,CAAoB;EACxCC,IAAI,EAAE,MADkC;EAExCC,MAAM,EAAE,EAFgC;EAGxCC,SAAS,EAAE,KAH6B;EAIxCC,UAAU,EAAE,MAAM,CAAE,CAJoB;EAKxCC,OAAO,EAAE,MAAM,CAAE;AALuB,CAApB,CAAtB;AAQA,OAAO,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;EAAA;;EAC9C,MAAM,CAACN,IAAD,EAAOO,OAAP,IAAkBX,QAAQ,CAAC,MAAD,CAAhC;EACA,MAAM,CAACK,MAAD,EAASO,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACM,SAAD,EAAYO,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;;EAEA,MAAMc,iBAAiB,GAAIV,IAAD,IAAU;IAClCO,OAAO,CAACP,IAAD,CAAP;EACD,CAFD;;EAIAH,SAAS,CAAC,MAAM;IACd,MAAMc,YAAY,GAAG,MAAM;MACzB,MAAMC,GAAG,GAAG,EAAZ;MACAC,KAAK,CAAC,kEAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;QAClBN,YAAY,CAAC,KAAD,CAAZ;QACAA,YAAY,CAAC,IAAD,CAAZ;QACA,OAAOM,QAAQ,CAACC,IAAT,EAAP;MACD,CALH,EAMGF,IANH,CAMSG,IAAD,IAAU;QACdC,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkBG,OAAlB,CAA2BC,GAAD,IAAS;UACjC,MAAMC,GAAG,GAAG;YACVC,EAAE,EAAEF,GADM;YAEVG,IAAI,EAAEP,IAAI,CAACI,GAAD,CAAJ,CAAUG,IAFN;YAGVC,WAAW,EAAER,IAAI,CAACI,GAAD,CAAJ,CAAUI,WAHb;YAIVC,IAAI,EAAET,IAAI,CAACI,GAAD,CAAJ,CAAUK;UAJN,CAAZ;UAMAd,GAAG,CAACe,IAAJ,CAASL,GAAT;QACD,CARD;QASAb,YAAY,CAAC,KAAD,CAAZ;QACAD,SAAS,CAACI,GAAD,CAAT;MACD,CAlBH;IAmBD,CArBD;EAsBD,CAvBQ,EAuBN,CAACJ,SAAD,CAvBM,CAAT;EAyBA,oBACE,QAAC,aAAD,CAAe,QAAf;IACE,KAAK,EAAE;MACLR,IAAI,EAAEA,IADD;MAELC,MAAM,EAAEA,MAFH;MAGLC,SAAS,EAAEA,SAHN;MAILC,UAAU,EAAEA;IAJP,CADT;IAAA,UAQGG,KAAK,CAACsB;EART;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CA9CM;;GAAMvB,qB;;KAAAA,qB;AAgDb,eAAeP,aAAf"},"metadata":{},"sourceType":"module"}