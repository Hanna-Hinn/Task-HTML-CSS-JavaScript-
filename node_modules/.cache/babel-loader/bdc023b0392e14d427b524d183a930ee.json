{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\EventPage\\\\src\\\\components\\\\mainContainer\\\\formComponents\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { NavLink, useNavigate, useParams } from \"react-router-dom\";\nimport classes from \"./form.module.css\";\nimport GlobalContext from \"../../../store/globalContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [saveMode, setSaveMode] = useState(false);\n  const [isValid, setIsValid] = useState(false);\n  const [eventId, setEventId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [date, setDate] = useState();\n  const ctx = useContext(GlobalContext);\n  let {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (id) {\n      setEventId(id);\n      setSaveMode(true);\n      setIsValid(true);\n    }\n  }, [id]);\n  let event;\n\n  if (saveMode) {\n    event = ctx.events.find(obj => {\n      return obj.id === eventId;\n    });\n  }\n\n  useEffect(() => {\n    if (event) {\n      setName(event.name);\n      setDescription(event.description);\n      setDate(event.date);\n    }\n  }, [event]);\n  let navigate = useNavigate();\n\n  const routeChange = () => {\n    let path = \"/list\";\n    navigate(path);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    const obj = {\n      name: name,\n      description: description,\n      date: date + \"\"\n    };\n    addEventHandler(obj);\n  };\n\n  function addEventHandler(obj) {\n    let dBUrl = \"https://event-task-f2694-default-rtdb.firebaseio.com/events.json\";\n    let requestObj = {\n      method: \"POST\",\n      body: JSON.stringify(obj),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    if (saveMode) {\n      dBUrl = \"https://event-task-f2694-default-rtdb.firebaseio.com/events/\" + eventId + \".json\";\n      requestObj = {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: \"Update\"\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n    }\n\n    console.log(requestObj.method);\n    fetch(dBUrl, {\n      requestObj\n    }).then(() => {\n      routeChange();\n    });\n  }\n\n  const nameChangeHandler = event => {\n    setName(event.target.value);\n    checkValid();\n  };\n\n  const dateChangeHandler = event => {\n    setDate(event.target.value);\n    checkValid();\n  };\n\n  const descriptionChangeHandler = event => {\n    setDescription(event.target.value);\n  };\n\n  function checkValid() {\n    if (name && date) {\n      setIsValid(true);\n    } else {\n      setIsValid(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.cont_form,\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: classes.col,\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        placeholder: \"Event Name...\",\n        value: name,\n        required: true,\n        onChange: nameChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: classes.col,\n      children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"text-area\",\n        name: \"text-area\",\n        placeholder: \"Details about the event...\",\n        value: description,\n        onChange: descriptionChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: classes.col,\n      children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"date\",\n        name: \"date\",\n        value: date,\n        required: true,\n        onChange: dateChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.col,\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        className: classes.cancel,\n        to: \"/\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Add\",\n        id: \"add-save\",\n        disabled: !isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"iwiNYPvnUgMi1Hq0PlKobArdyew=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useContext","useEffect","NavLink","useNavigate","useParams","classes","GlobalContext","Form","saveMode","setSaveMode","isValid","setIsValid","eventId","setEventId","name","setName","description","setDescription","date","setDate","ctx","id","event","events","find","obj","navigate","routeChange","path","formSubmissionHandler","preventDefault","addEventHandler","dBUrl","requestObj","method","body","JSON","stringify","headers","console","log","fetch","then","nameChangeHandler","target","value","checkValid","dateChangeHandler","descriptionChangeHandler","cont_form","col","cancel"],"sources":["C:/Users/PC/Desktop/EventPage/src/components/mainContainer/formComponents/Form.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { NavLink, useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport classes from \"./form.module.css\";\r\nimport GlobalContext from \"../../../store/globalContext\";\r\n\r\nconst Form = () => {\r\n  const [saveMode, setSaveMode] = useState(false);\r\n  const [isValid, setIsValid] = useState(false);\r\n  const [eventId, setEventId] = useState(\"\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [date, setDate] = useState();\r\n\r\n  const ctx = useContext(GlobalContext);\r\n  let { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      setEventId(id);\r\n      setSaveMode(true);\r\n      setIsValid(true);\r\n    }\r\n  }, [id]);\r\n\r\n  let event;\r\n\r\n  if (saveMode) {\r\n    event = ctx.events.find((obj) => {\r\n      return obj.id === eventId;\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (event) {\r\n      setName(event.name);\r\n      setDescription(event.description);\r\n      setDate(event.date);\r\n    }\r\n  }, [event]);\r\n\r\n  let navigate = useNavigate();\r\n  const routeChange = () => {\r\n    let path = \"/list\";\r\n    navigate(path);\r\n  };\r\n\r\n  const formSubmissionHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const obj = {\r\n      name: name,\r\n      description: description,\r\n      date: date + \"\",\r\n    };\r\n    addEventHandler(obj);\r\n  };\r\n\r\n  function addEventHandler(obj) {\r\n    let dBUrl =\r\n      \"https://event-task-f2694-default-rtdb.firebaseio.com/events.json\";\r\n    let requestObj = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(obj),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    if (saveMode) {\r\n      dBUrl =\r\n        \"https://event-task-f2694-default-rtdb.firebaseio.com/events/\" +\r\n        eventId +\r\n        \".json\";\r\n\r\n      requestObj = {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          name: \"Update\",\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n    }\r\n    console.log(requestObj.method);\r\n    fetch(dBUrl, { requestObj }).then(() => {\r\n      routeChange();\r\n    });\r\n  }\r\n\r\n  const nameChangeHandler = (event) => {\r\n    setName(event.target.value);\r\n    checkValid();\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setDate(event.target.value);\r\n    checkValid();\r\n  };\r\n\r\n  const descriptionChangeHandler = (event) => {\r\n    setDescription(event.target.value);\r\n  };\r\n\r\n  function checkValid() {\r\n    if (name && date) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className={classes.cont_form} onSubmit={formSubmissionHandler}>\r\n      <label className={classes.col}>\r\n        Name:\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          placeholder=\"Event Name...\"\r\n          value={name}\r\n          required\r\n          onChange={nameChangeHandler}\r\n        />\r\n      </label>\r\n\r\n      <label className={classes.col}>\r\n        Description:\r\n        <textarea\r\n          id=\"text-area\"\r\n          name=\"text-area\"\r\n          placeholder=\"Details about the event...\"\r\n          value={description}\r\n          onChange={descriptionChangeHandler}\r\n        ></textarea>\r\n      </label>\r\n\r\n      <label className={classes.col}>\r\n        Date:\r\n        <input\r\n          type=\"date\"\r\n          id=\"date\"\r\n          name=\"date\"\r\n          value={date}\r\n          required\r\n          onChange={dateChangeHandler}\r\n        />\r\n      </label>\r\n      <div className={classes.col}>\r\n        <NavLink className={classes.cancel} to=\"/\">\r\n          Cancel\r\n        </NavLink>\r\n        <input type=\"submit\" value=\"Add\" id=\"add-save\" disabled={!isValid} />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}